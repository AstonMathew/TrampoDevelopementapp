<?xml version="1.0" encoding="UTF-8"?>
<configuration>
<!--This file needs to be located in the root of the source folder in netbeans-->
  <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
    <layout class="ch.qos.logback.classic.PatternLayout">
      <Pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</Pattern>
    </layout>
  </appender>
   
  <appender name="FILE" class="ch.qos.logback.core.FileAppender">
      <rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
            <FileNamePattern>/walknshine.%i.log.zip
            </FileNamePattern>
            <MinIndex>1</MinIndex>
            <MaxIndex>10</MaxIndex>
<!--            this will automaticaly delete the 11th log file. a new log file is created when the size of n-1 log hits MaxFileSize= 10MB-->
        </rollingPolicy>

        <triggeringPolicy
                class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
            <MaxFileSize>10MB</MaxFileSize>
        </triggeringPolicy>
  	<file>MyLog.log</file> 
<!--        MyLog.log will save in the installation folder in production
        can input full path C:\\Users\\Administrator\\Dropbox\\Trampo\\IT\\Code\\Gui\\TrampoProcess\\MyLog.log
        In testing, should save to trampoProcess root folder
        LOG.trace("Hello World!");   Use of development?
        LOG.debug("How are you today?"); Information that is diagnostically helpful
        LOG.info("I am fine."); Generally useful information to log (service start/stop, configuration assumptions, etc). Info I want to always have available but usually don't care about under normal circumstances.
        LOG.warn("I love programming."); Anything that can potentially cause application oddities, but for which I am automatically recovering.
        LOG.error("I am programming."); Any error which is fatal to the operation, but not the service or application (can't open a required file, missing data, etc.)
        
        
        -->
  	<layout class="ch.qos.logback.classic.PatternLayout">
    	<Pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</Pattern>
  	</layout>
  </appender>
   
  <logger name="trampoprocess" level="TRACE"/>
   
 
  <root level="debug">
     <appender-ref ref="FILE" /> 
    <appender-ref ref="STDOUT" />
  </root>
</configuration>